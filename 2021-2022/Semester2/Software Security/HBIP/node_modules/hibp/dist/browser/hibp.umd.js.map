{"version":3,"file":"hibp.umd.js","sources":["../../src/breach.ts","../../src/breaches.ts","../../src/dataClasses.ts","../../src/pwnedPassword.ts","../../src/search.ts","../../node_modules/unfetch/dist/unfetch.module.js","../../node_modules/isomorphic-unfetch/browser.js","../../src/api/haveibeenpwned/responses.ts","../../src/api/haveibeenpwned/fetchFromApi.ts","../../src/breachedAccount.ts","../../src/pasteAccount.ts","../../node_modules/jssha/dist/sha1.mjs","../../src/api/pwnedpasswords/responses.ts","../../src/api/pwnedpasswords/fetchFromApi.ts","../../src/pwnedPasswordRange.ts"],"sourcesContent":["import { Breach } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * An object representing a breach.\n *\n * @typedef {object} Breach\n * @property {string} Name\n * @property {string} Title\n * @property {string} Domain\n * @property {string} BreachDate\n * @property {string} AddedDate\n * @property {string} ModifiedDate\n * @property {number} PwnCount\n * @property {string} Description\n * @property {string} LogoPath\n * @property {string[]} DataClasses\n * @property {boolean} IsVerified\n * @property {boolean} IsFabricated\n * @property {boolean} IsSensitive\n * @property {boolean} IsRetired\n * @property {boolean} IsSpamList\n */\n\n/**\n * Fetches data for a specific breach event.\n *\n * @param {string} breachName the name of a breach in the system\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach>|Promise<null>)} a Promise which resolves to an\n * object representing a breach (or null if no breach was found), or rejects\n * with an Error\n * @example\n * breach('Adobe')\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function breach(\n  breachName: string,\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<Breach | null> {\n  return fetchFromApi(\n    `/breach/${encodeURIComponent(breachName)}`,\n    options,\n  ) as Promise<Breach | null>;\n}\n","import { Breach } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * Fetches all breach events in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<Breach[]>} a Promise which resolves to an array of breach\n * objects (an empty array if no breaches were found), or rejects with an Error\n * @example\n * breaches()\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * breaches({ domain: 'adobe.com' })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function breaches(\n  options: {\n    domain?: string;\n    baseUrl?: string;\n    userAgent?: string;\n  } = {},\n): Promise<Breach[]> {\n  const endpoint = '/breaches?';\n  const params: Array<string> = [];\n  if (options.domain) {\n    params.push(`domain=${encodeURIComponent(options.domain)}`);\n  }\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    baseUrl: options.baseUrl,\n    userAgent: options.userAgent,\n  }) as Promise<Breach[]>;\n}\n","import { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * Fetches all data classes in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<string[]> | Promise<null>)} a Promise which resolves to an\n * array of strings (or null if no data classes were found), or rejects with an\n * Error\n * @example\n * dataClasses()\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function dataClasses(\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<string[] | null> {\n  return fetchFromApi('/dataclasses', options) as Promise<string[] | null>;\n}\n","import JSSHA from 'jssha/dist/sha1';\nimport { pwnedPasswordRange } from './pwnedPasswordRange';\n\n/**\n * Fetches the number of times the the given password has been exposed in a\n * breach (0 indicating no exposure). The password is given in plain text, but\n * only the first 5 characters of its SHA-1 hash will be submitted to the API.\n *\n * @param {string} password a password in plain text\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<number>} a Promise which resolves to the number of times\n * the password has been exposed in a breach, or rejects with an Error\n * @example\n * pwnedPassword('f00b4r')\n *   .then(numPwns => {\n *     // truthy check or numeric condition\n *     if (numPwns) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @see https://haveibeenpwned.com/api/v3#PwnedPasswords\n */\nexport function pwnedPassword(\n  password: string,\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<number> {\n  const sha1 = new JSSHA('SHA-1', 'TEXT');\n  sha1.update(password);\n  const hash = sha1.getHash('HEX', { outputUpper: true });\n  const prefix = hash.slice(0, 5);\n  const suffix = hash.slice(5);\n\n  return pwnedPasswordRange(prefix, options).then(\n    (range) => range[suffix] || 0,\n  );\n}\n","import { Breach, Paste } from './api/haveibeenpwned/types';\nimport { breachedAccount } from './breachedAccount';\nimport { pasteAccount } from './pasteAccount';\n\nexport interface SearchResults {\n  breaches: Breach[] | null;\n  pastes: Paste[] | null;\n}\n\n/**\n * An object representing search results.\n *\n * @typedef {object} SearchResults\n * @property {(Breach[] | null)} breaches\n * @property {(Paste[] | null)} pastes\n */\n\n/**\n * Fetches all breaches and all pastes associated with the provided account\n * (email address or username). Note that the remote API does not support\n * querying pastes by username (only email addresses), so in the event the\n * provided account is not a valid email address, only breach data is queried\n * and the \"pastes\" field of the resulting object will always be null. This is\n * exactly how searching via the current web interface behaves, which this\n * convenience method is designed to mimic.\n *\n * ***Warning (July 18, 2019):***\n *\n * `haveibeenpwned.com` now requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` and\n * `pasteaccount` endpoints. The  `apiKey` option here is not explicitly\n * required, but direct requests made without it (that is, without specifying a\n * `baseUrl` to a proxy that inserts a valid API key on your behalf) will fail.\n *\n * @param {string} account an email address or username\n * @param {object} [breachOptions] a configuration object pertaining to breach\n * queries\n * @param {string} [breachOptions.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [breachOptions.domain] a domain by which to filter the\n * results (default: all domains)\n * @param {boolean} [breachOptions.truncate] truncate the results to only\n * include the name of each breach (default: true)\n * @param {string} [breachOptions.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [breachOptions.userAgent] a custom string to send as the\n * User-Agent field in the request headers (default: `hibp <version>`)\n * @returns {Promise<SearchResults>} a Promise which resolves to an object\n * containing a \"breaches\" key (which can be null or an array of breach objects)\n * and a \"pastes\" key (which can be null or an array of paste objects), or\n * rejects with an Error\n * @example\n * search('foo', { apiKey: 'my-api-key' })\n *   .then(data => {\n *     if (data.breaches || data.pastes) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * search('nobody@nowhere.com', { apiKey: 'my-api-key', truncate: false })\n *   .then(data => {\n *     if (data.breaches || data.pastes) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n *\n * @see https://haveibeenpwned.com/\n */\nexport function search(\n  account: string,\n  breachOptions: {\n    apiKey?: string;\n    domain?: string;\n    truncate?: boolean;\n    baseUrl?: string;\n    userAgent?: string;\n  } = {\n    truncate: true,\n  },\n): Promise<SearchResults> {\n  const { apiKey, baseUrl, userAgent } = breachOptions;\n\n  return Promise.all([\n    breachedAccount(account, breachOptions),\n    // This email regex is garbage but it seems to be what the API uses:\n    /^.+@.+$/.test(account)\n      ? pasteAccount(account, { apiKey, baseUrl, userAgent })\n      : null,\n  ]).then(\n    // Avoid array destructuring here to prevent need for Babel helpers\n    (promises) => ({\n      breaches: promises[0],\n      pastes: promises[1],\n    }),\n  );\n}\n","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","/**\n * Known potential responses from the remote API.\n *\n * Unfortunately, the API does not send a decent human-readable message back\n * with each response, but they are documented on the website:\n * https://haveibeenpwned.com/api/v3#ResponseCodes\n *\n * These objects simply provide a mapping between the HTTP response status code\n * and the corresponding human-readable message so we can throw a more\n * descriptive error for the consumer. (They are also leveraged in our tests.)\n */\n\nimport { ResponseBody } from './types';\n\n/** @internal */\nexport interface HaveIBeenPwnedApiResponse {\n  headers: Map<string, string>;\n  status: number;\n  statusText?: string;\n  body?: ResponseBody;\n}\n\nconst emptyHeaders = new Map<string, string>();\n\n/** @internal */\nexport const OK: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 200,\n};\n\n/** @internal */\nexport const BAD_REQUEST: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 400,\n  statusText:\n    'Bad request — the account does not comply with an acceptable format.',\n};\n\n/**\n * This response has unique behavior. For some reason, the API includes an\n * object in the response body for this one, containing a human-readable\n * message. Manually populating the message here purely for use in tests.\n *\n * @internal\n */\nexport const UNAUTHORIZED: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 401,\n  body: {\n    statusCode: 401,\n    message: 'Access denied due to missing hibp-api-key.',\n  },\n};\n\n/** @internal */\nexport const FORBIDDEN: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 403,\n  statusText: 'Forbidden - access denied.',\n};\n\n/** @internal */\nexport const BLOCKED: HaveIBeenPwnedApiResponse = {\n  headers: new Map([['cf-ray', 'someRayId']]),\n  status: 403,\n};\n\n/** @internal */\nexport const NOT_FOUND: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 404,\n};\n\n/**\n * This response has unique behavior. For some reason, the API includes an\n * object in the response body for this one, containing a human-readable\n * message. Manually populating the message here purely for use in tests.\n *\n * @internal\n */\nexport const TOO_MANY_REQUESTS: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 429,\n  body: {\n    statusCode: 429,\n    message: 'Rate limit is exceeded. Try again in 2 seconds.',\n  },\n};\n","import fetch from 'isomorphic-unfetch';\nimport { name, version } from '../../../package.json';\nimport { ApiData, ErrorData } from './types';\nimport {\n  BAD_REQUEST,\n  UNAUTHORIZED,\n  FORBIDDEN,\n  NOT_FOUND,\n  TOO_MANY_REQUESTS,\n} from './responses';\n\nfunction blockedWithRayId(rayId: string) {\n  return `Request blocked, contact haveibeenpwned.com if this continues (Ray ID: ${rayId})`;\n}\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns an Object (data found).\n * HTTP status code 404 returns null (no data found).\n * HTTP status code 400 throws an Error (bad request).\n * HTTP status code 401 throws an Error (unauthorized).\n * HTTP status code 403 throws an Error (forbidden).\n * HTTP status code 429 throws an Error (too many requests).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<ApiData>} a Promise which resolves to the data resulting\n * from the query (or null for 404 Not Found responses), or rejects with an\n * Error\n */\nexport function fetchFromApi(\n  endpoint: string,\n  /* istanbul ignore next: no need to test default empty object */\n  {\n    apiKey,\n    baseUrl = 'https://haveibeenpwned.com/api/v3',\n    userAgent,\n  }: { apiKey?: string; baseUrl?: string; userAgent?: string } = {},\n): Promise<ApiData> {\n  const headers: Record<string, string> = {};\n\n  if (apiKey) {\n    headers['HIBP-API-Key'] = apiKey;\n  }\n\n  if (userAgent) {\n    headers['User-Agent'] = userAgent;\n  }\n\n  // Provide a default User-Agent when running outside the browser\n  if (!userAgent && typeof navigator === 'undefined') {\n    headers['User-Agent'] = `${name} ${version}`;\n  }\n\n  const config = { headers };\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}`;\n\n  return fetch(url, config).then((res) => {\n    if (res.ok) return res.json();\n\n    switch (res.status) {\n      case BAD_REQUEST.status:\n        throw new Error(BAD_REQUEST.statusText);\n      case UNAUTHORIZED.status:\n        return res.json().then((body: ErrorData) => {\n          throw new Error(body.message);\n        });\n      case FORBIDDEN.status: {\n        const rayId = res.headers.get('cf-ray');\n        if (rayId) {\n          throw new Error(blockedWithRayId(rayId));\n        }\n        throw new Error(FORBIDDEN.statusText);\n      }\n      case NOT_FOUND.status:\n        return null;\n      case TOO_MANY_REQUESTS.status:\n        return res.json().then((body: ErrorData) => {\n          throw new Error(body.message);\n        });\n      default:\n        throw new Error(res.statusText);\n    }\n  });\n}\n","import { Breach } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * Fetches breach data for a specific account.\n *\n * ***Warning (July 18, 2019):***\n *\n * `haveibeenpwned.com` now requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it (that is, without specifying a `baseUrl` to a proxy that inserts a\n * valid API key on your behalf) will fail.\n *\n * @param {string} account a username or email address\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {boolean} [options.includeUnverified] include \"unverified\" breaches in\n * the results (default: true)\n * @param {boolean} [options.truncate] truncate the results to only include\n * the name of each breach (default: true)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach[]> | Promise<null>)} a Promise which resolves to an\n * array of breach objects (or null if no breaches were found), or rejects with\n * an Error\n * @example\n * breachedAccount('foo', { apiKey: 'my-api-key' })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * breachedAccount('bar', {\n *   includeUnverified: false,\n *   baseUrl: 'https://my-hibp-proxy:8080',\n * })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * breachedAccount('baz', {\n *   apiKey: 'my-api-key',\n *   domain: 'adobe.com',\n *   truncate: false,\n *   userAgent: 'my-app 1.0'\n * })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function breachedAccount(\n  account: string,\n  options: {\n    apiKey?: string;\n    domain?: string;\n    includeUnverified?: boolean;\n    truncate?: boolean;\n    baseUrl?: string;\n    userAgent?: string;\n  } = {\n    includeUnverified: true,\n    truncate: true,\n  },\n): Promise<Breach[] | null> {\n  const endpoint = `/breachedaccount/${encodeURIComponent(account)}?`;\n  const params: Array<string> = [];\n  if (options.domain) {\n    params.push(`domain=${encodeURIComponent(options.domain)}`);\n  }\n  if (options.includeUnverified === false) {\n    params.push('includeUnverified=false');\n  }\n  if (options.truncate === false) {\n    params.push('truncateResponse=false');\n  }\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    apiKey: options.apiKey,\n    baseUrl: options.baseUrl,\n    userAgent: options.userAgent,\n  }) as Promise<Breach[] | null>;\n}\n","import { Paste } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * An object representing a paste.\n *\n * @typedef {object} Paste\n * @property {string} Id\n * @property {string} Source\n * @property {string} Title\n * @property {string} Date\n * @property {number} EmailCount\n */\n\n/**\n * Fetches paste data for a specific account (email address).\n *\n * ***Warning (July 18, 2019):***\n *\n * `haveibeenpwned.com` now requires an API key from\n * https://haveibeenpwned.com/API/Key for the `pasteaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it (that is, without specifying a `baseUrl` to a proxy that inserts a\n * valid API key on your behalf) will fail.\n *\n * @param {string} email the email address to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Paste[]> | Promise<null>)} a Promise which resolves to an\n * array of paste objects (or null if no pastes were found), or rejects with an\n * Error\n * @example\n * pasteAccount('foo@bar.com', { apiKey: 'my-api-key' })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function pasteAccount(\n  email: string,\n  options: { apiKey?: string; baseUrl?: string; userAgent?: string } = {},\n): Promise<Paste[] | null> {\n  return fetchFromApi(`/pasteaccount/${encodeURIComponent(email)}`, {\n    apiKey: options.apiKey,\n    baseUrl: options.baseUrl,\n    userAgent: options.userAgent,\n  }) as Promise<Paste[] | null>;\n}\n","/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n */\nconst t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function r(t,r,n,i){let e,s,o;const h=r||[0],u=(n=n||0)>>>3,f=-1===i?3:0;for(e=0;e<t.length;e+=1)o=e+u,s=o>>>2,h.length<=s&&h.push(0),h[s]|=t[e]<<8*(f+i*(o%4));return{value:h,binLen:8*t.length+n}}function n(n,i,e){switch(i){case\"UTF8\":case\"UTF16BE\":case\"UTF16LE\":break;default:throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\")}switch(n){case\"HEX\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;if(0!=t.length%2)throw new Error(\"String of HEX type must be in byte increments\");const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(e=0;e<t.length;e+=2){if(s=parseInt(t.substr(e,2),16),isNaN(s))throw new Error(\"String of HEX type contains invalid characters\");for(h=(e>>>1)+f,o=h>>>2;u.length<=o;)u.push(0);u[o]|=s<<8*(c+i*(h%4))}return{value:u,binLen:4*t.length+n}}(t,r,n,e)};case\"TEXT\":return function(t,r,n){return function(t,r,n,i,e){let s,o,h,u,f,c,a,w,E=0;const l=n||[0],A=(i=i||0)>>>3;if(\"UTF8\"===r)for(a=-1===e?3:0,h=0;h<t.length;h+=1)for(s=t.charCodeAt(h),o=[],128>s?o.push(s):2048>s?(o.push(192|s>>>6),o.push(128|63&s)):55296>s||57344<=s?o.push(224|s>>>12,128|s>>>6&63,128|63&s):(h+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(h)),o.push(240|s>>>18,128|s>>>12&63,128|s>>>6&63,128|63&s)),u=0;u<o.length;u+=1){for(c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=o[u]<<8*(a+e*(c%4)),E+=1}else for(a=-1===e?2:0,w=\"UTF16LE\"===r&&1!==e||\"UTF16LE\"!==r&&1===e,h=0;h<t.length;h+=1){for(s=t.charCodeAt(h),!0===w&&(u=255&s,s=u<<8|s>>>8),c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=s<<8*(a+e*(c%4)),E+=2}return{value:l,binLen:8*E+i}}(t,i,r,n,e)};case\"B64\":return function(r,n,i){return function(r,n,i,e){let s,o,h,u,f,c,a,w=0;const E=n||[0],l=(i=i||0)>>>3,A=-1===e?3:0,p=r.indexOf(\"=\");if(-1===r.search(/^[a-zA-Z0-9=+/]+$/))throw new Error(\"Invalid character in base-64 string\");if(r=r.replace(/=/g,\"\"),-1!==p&&p<r.length)throw new Error(\"Invalid '=' found in base-64 string\");for(o=0;o<r.length;o+=4){for(f=r.substr(o,4),u=0,h=0;h<f.length;h+=1)s=t.indexOf(f.charAt(h)),u|=s<<18-6*h;for(h=0;h<f.length-1;h+=1){for(a=w+l,c=a>>>2;E.length<=c;)E.push(0);E[c]|=(u>>>16-8*h&255)<<8*(A+e*(a%4)),w+=1}}return{value:E,binLen:8*w+i}}(r,n,i,e)};case\"BYTES\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(s=0;s<t.length;s+=1)e=t.charCodeAt(s),h=s+f,o=h>>>2,u.length<=o&&u.push(0),u[o]|=e<<8*(c+i*(h%4));return{value:u,binLen:8*t.length+n}}(t,r,n,e)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t,n,i){return function(t,n,i,e){return r(new Uint8Array(t),n,i,e)}(t,n,i,e)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t,n,i){return r(t,n,i,e)};default:throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function i(r,n,i,e){switch(r){case\"HEX\":return function(t){return function(t,r,n,i){let e,s,o=\"\";const h=r/8,u=-1===n?3:0;for(e=0;e<h;e+=1)s=t[e>>>2]>>>8*(u+n*(e%4)),o+=\"0123456789abcdef\".charAt(s>>>4&15)+\"0123456789abcdef\".charAt(15&s);return i.outputUpper?o.toUpperCase():o}(t,n,i,e)};case\"B64\":return function(r){return function(r,n,i,e){let s,o,h,u,f,c=\"\";const a=n/8,w=-1===i?3:0;for(s=0;s<a;s+=3)for(u=s+1<a?r[s+1>>>2]:0,f=s+2<a?r[s+2>>>2]:0,h=(r[s>>>2]>>>8*(w+i*(s%4))&255)<<16|(u>>>8*(w+i*((s+1)%4))&255)<<8|f>>>8*(w+i*((s+2)%4))&255,o=0;o<4;o+=1)c+=8*s+6*o<=n?t.charAt(h>>>6*(3-o)&63):e.b64Pad;return c}(r,n,i,e)};case\"BYTES\":return function(t){return function(t,r,n){let i,e,s=\"\";const o=r/8,h=-1===n?3:0;for(i=0;i<o;i+=1)e=t[i>>>2]>>>8*(h+n*(i%4))&255,s+=String.fromCharCode(e);return s}(t,n,i)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t){return function(t,r,n){let i;const e=r/8,s=new ArrayBuffer(e),o=new Uint8Array(s),h=-1===n?3:0;for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(h+n*(i%4))&255;return s}(t,n,i)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t){return function(t,r,n){let i;const e=r/8,s=-1===n?3:0,o=new Uint8Array(e);for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(s+n*(i%4))&255;return o}(t,n,i)};default:throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function e(t){const r={outputUpper:!1,b64Pad:\"=\",outputLen:-1},n=t||{},i=\"Output length must be a multiple of 8\";if(r.outputUpper=n.outputUpper||!1,n.b64Pad&&(r.b64Pad=n.b64Pad),n.outputLen){if(n.outputLen%8!=0)throw new Error(i);r.outputLen=n.outputLen}else if(n.shakeLen){if(n.shakeLen%8!=0)throw new Error(i);r.outputLen=n.shakeLen}if(\"boolean\"!=typeof r.outputUpper)throw new Error(\"Invalid outputUpper formatting option\");if(\"string\"!=typeof r.b64Pad)throw new Error(\"Invalid b64Pad formatting option\");return r}function s(t,r){return t<<r|t>>>32-r}function o(t,r,n){return t^r^n}function h(t,r,n){return t&r^t&n^r&n}function u(t,r){const n=(65535&t)+(65535&r);return(65535&(t>>>16)+(r>>>16)+(n>>>16))<<16|65535&n}function f(t,r,n,i,e){const s=(65535&t)+(65535&r)+(65535&n)+(65535&i)+(65535&e);return(65535&(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16)+(e>>>16)+(s>>>16))<<16|65535&s}function c(t){return[1732584193,4023233417,2562383102,271733878,3285377520]}function a(t,r){let n,i,e,c,a,w,E;const l=[];for(n=r[0],i=r[1],e=r[2],c=r[3],a=r[4],E=0;E<80;E+=1)l[E]=E<16?t[E]:s(l[E-3]^l[E-8]^l[E-14]^l[E-16],1),w=E<20?f(s(n,5),(A=i)&e^~A&c,a,1518500249,l[E]):E<40?f(s(n,5),o(i,e,c),a,1859775393,l[E]):E<60?f(s(n,5),h(i,e,c),a,2400959708,l[E]):f(s(n,5),o(i,e,c),a,3395469782,l[E]),a=c,c=e,e=s(i,30),i=n,n=w;var A;return r[0]=u(n,r[0]),r[1]=u(i,r[1]),r[2]=u(e,r[2]),r[3]=u(c,r[3]),r[4]=u(a,r[4]),r}function w(t,r,n,i){let e;const s=15+(r+65>>>9<<4),o=r+n;for(;t.length<=s;)t.push(0);for(t[r>>>5]|=128<<24-r%32,t[s]=4294967295&o,t[s-1]=o/4294967296|0,e=0;e<t.length;e+=16)i=a(t.slice(e,e+16),i);return i}export default class extends class{constructor(t,r,n){const i=n||{};if(this.t=r,this.i=i.encoding||\"UTF8\",this.numRounds=i.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error(\"numRounds must a integer >= 1\");this.s=t,this.o=[],this.h=0,this.u=!1,this.l=0,this.A=!1,this.p=[],this.R=[]}update(t){let r,n=0;const i=this.U>>>5,e=this.T(t,this.o,this.h),s=e.binLen,o=e.value,h=s>>>5;for(r=0;r<h;r+=i)n+this.U<=s&&(this.F=this.m(o.slice(r,r+i),this.F),n+=this.U);this.l+=n,this.o=o.slice(n>>>5),this.h=s%this.U,this.u=!0}getHash(t,r){let n,s,o=this.g;const h=e(r);if(this.B){if(-1===h.outputLen)throw new Error(\"Output length must be specified in options\");o=h.outputLen}const u=i(t,o,this.v,h);if(this.A&&this.Y)return u(this.Y(h));for(s=this.H(this.o.slice(),this.h,this.l,this.C(this.F),o),n=1;n<this.numRounds;n+=1)this.B&&o%32!=0&&(s[s.length-1]&=16777215>>>24-o%32),s=this.H(s,o,0,this.I(this.s),o);return u(s)}setHMACKey(t,r,i){if(!this.L)throw new Error(\"Variant does not support HMAC\");if(this.u)throw new Error(\"Cannot set MAC key after calling update\");const e=n(r,(i||{}).encoding||\"UTF8\",this.v);this.M(e(t))}M(t){const r=this.U>>>3,n=r/4-1;let i;if(1!==this.numRounds)throw new Error(\"Cannot set numRounds with MAC\");if(this.A)throw new Error(\"MAC key already set\");for(r<t.binLen/8&&(t.value=this.H(t.value,t.binLen,0,this.I(this.s),this.g));t.value.length<=n;)t.value.push(0);for(i=0;i<=n;i+=1)this.p[i]=909522486^t.value[i],this.R[i]=1549556828^t.value[i];this.F=this.m(this.p,this.F),this.l=this.U,this.A=!0}getHMAC(t,r){const n=e(r);return i(t,this.g,this.v,n)(this.N())}N(){let t;if(!this.A)throw new Error(\"Cannot call getHMAC without first setting MAC key\");const r=this.H(this.o.slice(),this.h,this.l,this.C(this.F),this.g);return t=this.m(this.R,this.I(this.s)),t=this.H(r,this.g,this.U,t,this.g),t}}{constructor(t,r,i){if(\"SHA-1\"!==t)throw new Error(\"Chosen SHA variant is not supported\");super(t,r,i);const e=i||{};this.L=!0,this.Y=this.N,this.v=-1,this.T=n(this.t,this.i,this.v),this.m=a,this.C=function(t){return t.slice()},this.I=c,this.H=w,this.F=[1732584193,4023233417,2562383102,271733878,3285377520],this.U=512,this.g=160,this.B=!1,e.hmacKey&&this.M(function(t,r,i,e){const s=t+\" must include a value and format\";if(!r){if(!e)throw new Error(s);return e}if(void 0===r.value||!r.format)throw new Error(s);return n(r.format,r.encoding||\"UTF8\",i)(r.value)}(\"hmacKey\",e.hmacKey,this.v))}}\n","/**\n * Known potential responses from the remote API.\n *\n * https://haveibeenpwned.com/api/v3#PwnedPasswords\n *\n */\n\n/** @internal */\nexport interface PwnedPasswordsApiResponse {\n  status: number;\n  body?: string;\n}\n\n/** @internal */\nexport const OK: PwnedPasswordsApiResponse = {\n  status: 200,\n};\n\n/** @internal */\nexport const BAD_REQUEST: PwnedPasswordsApiResponse = {\n  status: 400,\n  body: 'The hash prefix was not in a valid format',\n};\n","import fetch from 'isomorphic-unfetch';\nimport { BAD_REQUEST } from './responses';\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns plain text (data found).\n * HTTP status code 400 throws an Error (bad request).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<string>} a Promise which resolves to the data resulting\n * from the query, or rejects with an Error\n */\nexport function fetchFromApi(\n  endpoint: string,\n  /* istanbul ignore next: no need to test default empty object */\n  {\n    baseUrl = 'https://api.pwnedpasswords.com',\n    userAgent,\n  }: { baseUrl?: string; userAgent?: string } = {},\n): Promise<string> {\n  const config = Object.assign(\n    {},\n    userAgent\n      ? {\n          headers: {\n            'User-Agent': userAgent,\n          },\n        }\n      : {},\n  );\n\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}`;\n\n  return fetch(url, config).then((res) => {\n    if (res.ok) return res.text();\n\n    if (res.status === BAD_REQUEST.status) {\n      return res.text().then((text) => {\n        throw new Error(text);\n      });\n    }\n\n    throw new Error(res.statusText);\n  });\n}\n","import { fetchFromApi } from './api/pwnedpasswords';\n\nexport interface PwnedPasswordSuffixes {\n  [suffix: string]: number;\n}\n\n/**\n * An object mapping an exposed password hash suffix (corresponding to a given\n * hash prefix) to how many times it occurred in the Pwned Passwords repository.\n *\n * @typedef {Object.<string, number>} PwnedPasswordSuffixes\n */\n\n/**\n * Fetches the SHA-1 hash suffixes for the given 5-character SHA-1 hash prefix.\n *\n * When a password hash with the same first 5 characters is found in the Pwned\n * Passwords repository, the API will respond with an HTTP 200 and include the\n * suffix of every hash beginning with the specified prefix, followed by a count\n * of how many times it appears in the data set. This function parses the\n * response and returns a more structured format.\n *\n * @param {string} prefix the first 5 characters of a SHA-1 password hash (case\n * insensitive)\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<PwnedPasswordSuffixes>} a Promise which resolves to an\n * object mapping the `suffix` that when matched with the prefix composes the\n * complete hash, to the `count` of how many times it appears in the breached\n * password data set, or rejects with an Error\n *\n * @example\n * pwnedPasswordRange('5BAA6')\n *   .then(results => {\n *     // results will have the following shape:\n *     // {\n *     //   \"003D68EB55068C33ACE09247EE4C639306B\": 3,\n *     //   \"012C192B2F16F82EA0EB9EF18D9D539B0DD\": 1,\n *     //   ...\n *     // }\n *   })\n * @example\n * const suffix = '1E4C9B93F3F0682250B6CF8331B7EE68FD8';\n * pwnedPasswordRange('5BAA6')\n *   .then(results => (results[suffix] || 0))\n *   .catch(err => {\n *     // ...\n *   });\n * @see https://haveibeenpwned.com/api/v3#SearchingPwnedPasswordsByRange\n */\nexport function pwnedPasswordRange(\n  prefix: string,\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<PwnedPasswordSuffixes> {\n  return (\n    fetchFromApi(`/range/${encodeURIComponent(prefix)}`, options)\n      // create array from lines of text in response body\n      .then((data) => data.split('\\n'))\n      // convert into an object mapping suffix to count for each line\n      .then((results) =>\n        results.reduce<PwnedPasswordSuffixes>((acc, row) => {\n          const [suffix, countString] = row.split(':');\n          acc[suffix] = parseInt(countString, 10);\n          return acc;\n        }, {}),\n      )\n  );\n}\n"],"names":["breachName","options","fetchFromApi","encodeURIComponent","endpoint","params","domain","push","join","baseUrl","userAgent","password","sha1","JSSHA","update","hash","getHash","outputUpper","prefix","slice","suffix","pwnedPasswordRange","then","range","account","breachOptions","truncate","apiKey","Promise","all","breachedAccount","test","pasteAccount","promises","breaches","pastes","e","n","t","r","s","XMLHttpRequest","o","u","i","l","open","method","onload","getAllResponseHeaders","replace","toLowerCase","a","ok","status","statusText","url","responseURL","text","resolve","responseText","json","JSON","parse","blob","Blob","response","clone","headers","keys","entries","get","has","onerror","withCredentials","credentials","setRequestHeader","send","body","self","fetch","require$$0","default","BAD_REQUEST","Map","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","TOO_MANY_REQUESTS","blockedWithRayId","rayId","navigator","config","res","Error","message","includeUnverified","email","h","f","length","value","binLen","c","parseInt","substr","isNaN","w","E","A","charCodeAt","p","indexOf","search","charAt","ArrayBuffer","Uint8Array","toUpperCase","b64Pad","String","fromCharCode","outputLen","shakeLen","L","_this","Y","N","v","T","m","C","I","H","F","U","g","B","hmacKey","M","format","encoding","this","numRounds","R","Object","assign","data","split","results","reduce","acc","row"],"mappings":"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"}